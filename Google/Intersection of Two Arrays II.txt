class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
        HashMap<Integer, Integer> hm1 = new HashMap<>();
        HashMap<Integer, Integer> hm2 = new HashMap<>();
        HashMap<Integer, Integer> hm3 = new HashMap<>();
        int key, value;
        for(int i: nums1){
            hm1.put(i,hm1.getOrDefault(i,0)+1);
        }
        for(int i: nums2){
            hm2.put(i,hm2.getOrDefault(i,0)+1);
        }
        for (Map.Entry<Integer,Integer> entry : hm1.entrySet())  {
            key = entry.getKey();
        if(hm2.containsKey(key)){
                hm3.put(key, Math.min(hm1.get(key),hm2.get(key)));            
        }

        }
List<Integer> ls = new ArrayList<>();
        for (Map.Entry<Integer,Integer> entry : hm3.entrySet())  {
            key = entry.getKey();
            value = entry.getValue();
            while(value!=0){
                ls.add(key);
                value = value-1;
            }
        }
        int[] resultarray = new int[ls.size()];
        int index =0;
        for(int i: ls){
            resultarray[index] =i;
            index++;
        }
          
        
        return resultarray;  
    } 
       // int[] resultarray;
        
    
}